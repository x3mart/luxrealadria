{"version":3,"sources":["redux/actions/articles.js","components/layouts/Blogsidebar.js","components/sections/bloglist/Content.js","components/pages/Bloglist.js"],"names":["load_all_articles","dispatch","a","config","headers","Accept","axios","get","process","res","type","GET_ALL_ARTICLES_SUCCESS","payload","data","GET_ALL_ARTICLES_FAIL","load_articles_by_page","n","GET_ARTICLES_BY_PAGE_SUCCESS","GET_ARTICLES_BY_PAGE_FAIL","load_single_article","id","GET_SINGLE_ARTICLE_SUCCESS","GET_SINGLE_ARTICLE_FAIL","Component","connect","state","articles","useState","items","setItems","currentPage","setCurrentPage","itemsPerPage","loading","setLoading","useEffect","timer","setTimeout","clearTimeout","results","handleClick","window","scrollTo","top","behavior","console","log","RenderedItems","map","item","i","className","to","title","text","pageNumbers","Math","ceil","count","push","RenderPagination","number","activeCondition","length","classNames","active","data-page","onClick","Loader","previous","next","parseInt","Bloglist","name","content","Breadcrumb","breadcrumb","pagename"],"mappings":"2PAUaA,EAAoB,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DAC/BC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBAJyB,kBAQjBC,IAAMC,IAAN,UACbC,0BADa,kBAEhBL,GAViC,OAQ7BM,EAR6B,OAanCR,EAAS,CACPS,KAAMC,IACNC,QAASH,EAAII,OAfoB,gDAkBnCZ,EAAS,CACPS,KAAMI,MAnB2B,yDAAN,uDAwBpBC,EAAwB,SAAAC,GAAC,8CAAI,WAAMf,GAAN,iBAAAC,EAAA,6DAClCC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBAJ4B,kBAQpBC,IAAMC,IAAN,UACbC,0BADa,+BACuCQ,GACvDb,GAVoC,OAQhCM,EARgC,OAatCR,EAAS,CACPS,KAAMO,IACNL,QAASH,EAAII,OAfuB,gDAkBtCZ,EAAS,CACPS,KAAMQ,MAnB8B,yDAAJ,uDAwBzBC,EAAsB,SAAAC,GAAE,8CAAI,WAAMnB,GAAN,iBAAAC,EAAA,6DACjCC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBAJ2B,kBAQnBC,IAAMC,IAAN,UACbC,0BADa,yBACiCY,EADjC,KAEhBjB,GAVmC,OAQ/BM,EAR+B,OAarCR,EAAS,CACPS,KAAMW,IACNT,QAASH,EAAII,OAfsB,gDAkBrCZ,EAAS,CACPS,KAAMY,MAnB6B,yDAAJ,wD,+JCtDXC,Y,0CCiMXC,eAJS,SAAAC,GAAK,MAAK,CAChCC,SAAUD,EAAMC,SAASA,YAGa,CACtC1B,sBACAe,2BAFaS,EAzLC,SAAC,GAA4D,IAA1DxB,EAAyD,EAAzDA,kBAAmBe,EAAsC,EAAtCA,sBAAuBW,EAAe,EAAfA,SAAe,EAChDC,mBAAS,IADuC,mBACnEC,EADmE,KAC5DC,EAD4D,OAEpCF,mBAAS,GAF2B,mBAEnEG,EAFmE,KAEtDC,EAFsD,OAGlCJ,mBAAS,GAHyB,mBAGnEK,EAHmE,aAI5CL,oBAAS,IAJmC,mBAInEM,EAJmE,KAI1DC,EAJ0D,KAM1EC,qBAAU,WACRD,GAAW,GACXlC,IAEA,IAAIoC,EAAQC,YAAW,WACrBH,GAAW,KACV,KACH,OAAO,WACLI,aAAaF,MAEd,IAEHD,qBAAU,WACJT,GACFG,EAASH,EAASa,WAEnB,CAACb,IAEJ,IAAMc,EAAc,SAAAxB,GAClB,IAAIH,EAAOE,EAAsBC,GACjCe,EAAef,GAGXH,GACF4B,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,YAKhBC,QAAQC,IAAIlB,GAwBZ,IAAMmB,EAAgB,WACpB,GAAInB,EACF,OAAOA,EAAMoB,KAAI,SAACC,EAAMC,GACtB,OACE,yBAAiBC,UAAU,OAA3B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,UACG,IACD,cAAC,IAAD,CAAMC,GAAE,oBAAeH,EAAK7B,IAA5B,SAAmC6B,EAAKI,QAAc,OAExD,mBAAGF,UAAU,YAAb,SAA0BF,EAAKK,OAC/B,qBAAKH,UAAU,gBAAf,SACE,cAAC,IAAD,CACEC,GAAE,oBAAeH,EAAK7B,IACtB+B,UAAU,8BAFZ,0EARQD,OAsBhBK,EAAc,GACpB,GAAI7B,EACF,IAAK,IAAIwB,EAAI,EAAGA,GAAKM,KAAKC,KAAK/B,EAASgC,MAAQ1B,GAAekB,IAC7DK,EAAYI,KAAKT,GAGrB,IAAMU,EAAmB,WAyBvB,OAxByBL,EAAYP,KAAI,SAAAa,GACvC,IAAMC,EAAkBhC,IAAgB+B,EAAS,SAAW,GAC5D,OACE,cAAC,WAAD,UACGN,EAAYQ,OAAS,EACpB,oBACEZ,UAAWa,IAAW,YAAa,CAAEC,OAAQH,IAD/C,SAGE,cAAC,IAAD,CACEX,UAAU,YACVC,GAAG,IACHc,YAAWL,EACXM,QAAS,kBAAM3B,EAAYqB,IAJ7B,SAMGA,MAIL,IAfWA,OAwBrB,OACE,qBAAKV,UAAU,mCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAEE,iCAEe,IAAZlB,EAAoB,cAACc,EAAD,IAAoB,cAACqB,EAAA,EAAD,IAGxCb,EAAYQ,OAAS,EACpB,qBAAIZ,UAAU,aAAd,UAGGzB,GAAYA,EAAS2C,SACpB,oBAAIlB,UAAU,YAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVC,GAAG,IACHc,YAAWpC,EAAc,EACzBqC,QAAS,kBAAM3B,EAAYV,EAAc,IAJ3C,SAME,mBAAGqB,UAAU,4BAIjB,GAGF,cAACS,EAAD,IAGClC,GAAYA,EAAS4C,KACpB,oBAAInB,UAAU,YAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVC,GAAG,IACHc,YAAWK,SAASzC,EAAc,GAClCqC,QAAS,kBAAM3B,EAAYV,EAAc,IAJ3C,SAME,mBAAGqB,UAAU,6BAIjB,MAKJ,eC/KRqB,E,uKAEE,OACE,eAAC,WAAD,WACE,eAAC,IAAD,WACE,yIACA,sBAAMC,KAAK,cAAcC,QAAQ,SAEnC,cAACC,EAAA,EAAD,CAAYC,WAAY,CAAEC,SAAU,2FACpC,cAAC,EAAD,W,GATWtD,aAeRiD","file":"static/js/22.9be41291.chunk.js","sourcesContent":["import axios from 'axios'\nimport {\n  GET_ALL_ARTICLES_SUCCESS,\n  GET_ALL_ARTICLES_FAIL,\n  GET_SINGLE_ARTICLE_SUCCESS,\n  GET_SINGLE_ARTICLE_FAIL,\n  GET_ARTICLES_BY_PAGE_SUCCESS,\n  GET_ARTICLES_BY_PAGE_FAIL,\n} from './types'\n\nexport const load_all_articles = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  }\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/articles/`,\n      config\n    )\n\n    dispatch({\n      type: GET_ALL_ARTICLES_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_ARTICLES_FAIL,\n    })\n  }\n}\n\nexport const load_articles_by_page = n => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  }\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/articles/?page=${n}`,\n      config\n    )\n\n    dispatch({\n      type: GET_ARTICLES_BY_PAGE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_ARTICLES_BY_PAGE_FAIL,\n    })\n  }\n}\n\nexport const load_single_article = id => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  }\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/articles/${id}/`,\n      config\n    )\n\n    dispatch({\n      type: GET_SINGLE_ARTICLE_SUCCESS,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_SINGLE_ARTICLE_FAIL,\n    })\n  }\n}\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { blogblock, blogcategory } from '../../data/blog.json';\r\n\r\nclass Blogsidebar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <div className=\"sidebar-widget\">\r\n                    <form method=\"post\">\r\n                        <h5>Search Posts</h5>\r\n                        <div className=\"search-wrapper\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Search\" name=\"sidebar-search\" />\r\n                            <button type=\"submit\" className=\"btn-custom\"><i className=\"flaticon-search\" /></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"sidebar-widget\">\r\n                    <h5>Recent Posts</h5>\r\n                    {blogblock.filter(function (item) { return item.recent === true }).slice(0,4).map((item, i) => (\r\n                        <article key={i} className=\"media\">\r\n                            <Link to=\"/blog-single\"><img src={process.env.PUBLIC_URL + \"/\" + item.gridimg} alt=\"post\" /></Link>\r\n                            <div className=\"media-body\">\r\n                                <h6> <Link to=\"/blog-single\">{item.title}</Link> </h6>\r\n                                <span>{item.postdate}</span>\r\n                            </div>\r\n                        </article>\r\n                    ))}\r\n                </div>\r\n                <div className=\"sidebar-widget sidebar-list\">\r\n                    <h5>Popular Categories</h5>\r\n                    <ul>\r\n                        {blogcategory.map((item, i) => (\r\n                            <li key={i}>\r\n                                <Link to=\"/blog-single\"> {item.title} <span>({item.count})</span>\r\n                                    <i className=\"fas fa-chevron-right\" />\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"sidebar-widget tags\">\r\n                    <h5>Popular Tags</h5>\r\n                    {blogblock.map((item, i) => (\r\n                        <Fragment key={i}>\r\n                            {item.tagslist.map((item, i) => (\r\n                                <Link key={i} to=\"/blog-single\">{item.title}</Link>\r\n                            ))}\r\n                        </Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blogsidebar;","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { blogblock } from '../../../data/blog.json'\r\nimport Sidebar from '../../layouts/Blogsidebar'\r\nimport classNames from 'classnames'\r\nimport Loader from '../../layouts/Loader'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  load_all_articles,\r\n  load_articles_by_page,\r\n} from '../../../redux/actions/articles'\r\n\r\nconst Content = ({ load_all_articles, load_articles_by_page, articles }) => {\r\n  const [items, setItems] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [itemsPerPage, setItemsPerPage] = useState(5)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    load_all_articles()\r\n\r\n    let timer = setTimeout(() => {\r\n      setLoading(false)\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (articles) {\r\n      setItems(articles.results)\r\n    }\r\n  }, [articles])\r\n\r\n  const handleClick = n => {\r\n    let data = load_articles_by_page(n)\r\n    setCurrentPage(n)\r\n    // let paginationContent = event.target.closest('.pagination-content')\r\n\r\n    if (data) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth',\r\n      })\r\n    }\r\n  }\r\n\r\n  console.log(items)\r\n\r\n  // const handleClick(event) {\r\n  //     var paginationContent = event.target.closest('.pagination-content');\r\n\r\n  //     if (paginationContent) {\r\n  //         paginationContent.scrollIntoView();\r\n  //     }\r\n\r\n  //     setLoading(true)\r\n  //     setTimeout(() => {\r\n  //         this.setState({\r\n  //             currentPage: Number(event.target.getAttribute('data-page')),\r\n  //             loading: false\r\n  //         });\r\n  //     }, 1000);\r\n\r\n  // }\r\n\r\n  // Logic for displaying items\r\n  // const indexOfLastitem = currentPage * itemsPerPage\r\n  // const indexOfFirstitem = indexOfLastitem - itemsPerPage\r\n  // const currentitems = items.slice(indexOfFirstitem, indexOfLastitem)\r\n\r\n  const RenderedItems = () => {\r\n    if (items) {\r\n      return items.map((item, i) => {\r\n        return (\r\n          <article key={i} className='post'>\r\n            <div className='post-body'>\r\n              <h5 className='post-title'>\r\n                {' '}\r\n                <Link to={`/articles/${item.id}`}>{item.title}</Link>{' '}\r\n              </h5>\r\n              <p className='post-text'>{item.text}</p>\r\n              <div className='post-controls'>\r\n                <Link\r\n                  to={`/articles/${item.id}`}\r\n                  className='btn-custom secondary btn-sm'\r\n                >\r\n                  Подробнее\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const pageNumbers = []\r\n  if (articles) {\r\n    for (let i = 1; i <= Math.ceil(articles.count / itemsPerPage); i++) {\r\n      pageNumbers.push(i)\r\n    }\r\n  }\r\n  const RenderPagination = () => {\r\n    const renderPagination = pageNumbers.map(number => {\r\n      const activeCondition = currentPage === number ? 'active' : ''\r\n      return (\r\n        <Fragment key={number}>\r\n          {pageNumbers.length > 1 ? (\r\n            <li\r\n              className={classNames('page-item', { active: activeCondition })}\r\n            >\r\n              <Link\r\n                className='page-link'\r\n                to='#'\r\n                data-page={number}\r\n                onClick={() => handleClick(number)}\r\n              >\r\n                {number}\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </Fragment>\r\n      )\r\n    })\r\n\r\n    return renderPagination\r\n  }\r\n\r\n  return (\r\n    <div className='section posts pagination-content'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          {/* Posts Start */}\r\n          <div>\r\n            {/* Post Start */}\r\n            {loading === false ? <RenderedItems /> : <Loader />}\r\n            {/* Post End */}\r\n            {/* Pagination Start */}\r\n            {pageNumbers.length > 1 ? (\r\n              <ul className='pagination'>\r\n                {/* Prev */}\r\n                {/* to show previous, we need to be on the 2nd or more page */}\r\n                {articles && articles.previous ? (\r\n                  <li className='page-item'>\r\n                    <Link\r\n                      className='page-link'\r\n                      to='#'\r\n                      data-page={currentPage - 1}\r\n                      onClick={() => handleClick(currentPage - 1)}\r\n                    >\r\n                      <i className='fas fa-chevron-left' />\r\n                    </Link>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {/* Prev */}\r\n                <RenderPagination />\r\n                {/* Next */}\r\n                {/* to show next, we should not be on the last page */}\r\n                {articles && articles.next ? (\r\n                  <li className='page-item'>\r\n                    <Link\r\n                      className='page-link'\r\n                      to='#'\r\n                      data-page={parseInt(currentPage + 1)}\r\n                      onClick={() => handleClick(currentPage + 1)}\r\n                    >\r\n                      <i className='fas fa-chevron-right' />\r\n                    </Link>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {/* Next */}\r\n              </ul>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {/* Pagination End */}\r\n          </div>\r\n          {/* Posts End */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  articles: state.articles.articles,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  load_all_articles,\r\n  load_articles_by_page,\r\n})(Content)\r\n","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Header from '../layouts/Header';\r\nimport Breadcrumb from '../layouts/Breadcrumb';\r\nimport Footer from '../layouts/Footerthree'\r\nimport Content from '../sections/bloglist/Content';\r\n\r\nclass Bloglist extends Component {\r\n    render() {\r\n        return (\r\n          <Fragment>\r\n            <MetaTags>\r\n              <title>LuxRealAdria | Полезные статьи</title>\r\n              <meta name='description' content='#' />\r\n            </MetaTags>\r\n            <Breadcrumb breadcrumb={{ pagename: 'Полезные статьи' }} />\r\n            <Content />\r\n          </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bloglist;"],"sourceRoot":""}