{"version":3,"sources":["components/sections/agent-archive/Content.js","components/pages/Agentarchive.js"],"names":["Content","state","items","agents","currentPage","itemsPerPage","loading","handleClick","bind","event","paginationContent","target","closest","scrollIntoView","this","setState","setTimeout","Number","getAttribute","indexOfLastitem","indexOfFirstitem","renderitems","slice","map","item","i","className","star","to","src","img","alt","name","post","text","pageNumbers","Math","ceil","length","push","renderPagination","number","activeCondition","classNames","data-page","onClick","Loader","parseInt","listing","filter","recent","gridimg","title","Intl","NumberFormat","format","monthlyprice","toFixed","blogcategory","count","Component","Agentarchive","content","Breadcrumb","breadcrumb","pagename"],"mappings":"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","file":"static/js/18.730e258f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport agents from '../../../data/agents.json';\r\nimport listing from '../../../data/listings.json';\r\nimport { blogcategory } from '../../../data/blog.json';\r\nimport classNames from 'classnames';\r\nimport Loader from '../../layouts/Loader';\r\n\r\nclass Content extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: agents,\r\n            currentPage: 1,\r\n            itemsPerPage: 4,\r\n            loading: false\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        var paginationContent = event.target.closest('.pagination-content');\r\n\r\n        if (paginationContent) {\r\n            paginationContent.scrollIntoView();\r\n        }\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                currentPage: Number(event.target.getAttribute('data-page')),\r\n                loading: false\r\n            });\r\n        }, 2000);\r\n\r\n    }\r\n    render() {\r\n        const { items, currentPage, itemsPerPage } = this.state;\r\n\r\n        // Logic for displaying items\r\n        const indexOfLastitem = currentPage * itemsPerPage;\r\n        const indexOfFirstitem = indexOfLastitem - itemsPerPage;\r\n        const currentitems = items.slice(indexOfFirstitem, indexOfLastitem);\r\n\r\n        const renderitems = currentitems.map((item, i) => {\r\n            return <div key={i} className=\"col-lg-6\">\r\n                <div className=\"acr-agent\">\r\n                    {item.star === true ? <div className=\"listing-badge featured\"><i className=\"fas fa-star\" /></div> : ''}\r\n                    <div className=\"acr-dots-wrapper acr-agent-thumb\">\r\n                        <div className=\"acr-dots\" />\r\n                        <Link to=\"/agent-details\"><img src={process.env.PUBLIC_URL + \"/\" + item.img} alt=\"agent\" /></Link>\r\n                    </div>\r\n                    <div className=\"acr-agent-body\">\r\n                        <h6> <Link to=\"/agent-details\">{item.name}</Link> </h6>\r\n                        <span>{item.post}</span>\r\n                        <p>{item.text}</p>\r\n                        <Link to=\"/agent-details\" className=\"btn-custom secondary btn-sm\">View Profile</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n        const renderPagination = pageNumbers.map(number => {\r\n            const activeCondition = this.state.currentPage === number ? 'active' : ''\r\n            return (\r\n                <Fragment key={number}>\r\n                    {pageNumbers.length > 1 ? <li className={classNames(\"page-item\", { \"active\": activeCondition })}>\r\n                        <Link className=\"page-link\" to=\"#\" data-page={number} onClick={this.handleClick}>{number}</Link>\r\n                    </li> : ''}\r\n                </Fragment>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"section pagination-content\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"row\">\r\n                                {/* Agent Start */}\r\n                                {this.state.loading === false ? renderitems : <Loader />}\r\n                                {/* Agent End */}\r\n                            </div>\r\n                            {/* Pagination Start */}\r\n                            {pageNumbers.length > 1 ?\r\n                                <ul className=\"pagination\">\r\n                                    {/* Prev */}\r\n                                    {/* to show previous, we need to be on the 2nd or more page */}\r\n                                    {pageNumbers.length > 1 && this.state.currentPage !== 1 ?\r\n                                        <li className=\"page-item\">\r\n                                            <Link className=\"page-link\" to=\"#\" data-page={this.state.currentPage - 1} onClick={this.handleClick}>\r\n                                                <i className=\"fas fa-chevron-left\" />\r\n                                            </Link>\r\n                                        </li>\r\n                                        : ''}\r\n                                    {/* Prev */}\r\n                                    {renderPagination}\r\n                                    {/* Next */}\r\n                                    {/* to show next, we should not be on the last page */}\r\n                                    {pageNumbers.length > 1 && this.state.currentPage !== pageNumbers.length ? <li className=\"page-item\">\r\n                                        <Link className=\"page-link\" to=\"#\" data-page={parseInt(this.state.currentPage + 1)} onClick={this.handleClick}>\r\n                                            <i className=\"fas fa-chevron-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                        : ''}\r\n                                    {/* Next */}\r\n                                </ul> : ''}\r\n                            {/* Pagination End */}\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"sidebar\">\r\n                                <div className=\"sidebar-widget\">\r\n                                    <h5>Recent Listings</h5>\r\n                                    {/* Listing Start */}\r\n                                    {listing.filter(function (item) { return item.recent === true }).slice(0, 4).map((item, i) => (\r\n                                        <div key={i} className=\"listing listing-list\">\r\n                                            <div className=\"listing-thumbnail\">\r\n                                                <Link to=\"/listing-details-v1\"><img src={process.env.PUBLIC_URL + \"/\" + item.gridimg} alt=\"listing\" /></Link>\r\n                                            </div>\r\n                                            <div className=\"listing-body\">\r\n                                                <h6 className=\"listing-title\"> <Link to=\"/listing-details-v1\" title={item.title}>{item.title}</Link> </h6>\r\n                                                <span className=\"listing-price\">{new Intl.NumberFormat().format((item.monthlyprice).toFixed(2))}$ <span>/month</span> </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                    {/* Listing End */}\r\n                                </div>\r\n                                <div className=\"sidebar-widget sidebar-list\">\r\n                                    <h5>Popular Categories</h5>\r\n                                    <ul>\r\n                                        {blogcategory.map((item, i) => (\r\n                                            <li key={i}>\r\n                                                <Link to=\"/blog-single\"> {item.title} <span>({item.count})</span>\r\n                                                    <i className=\"fas fa-chevron-right\" />\r\n                                                </Link>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component, Fragment } from 'react'\r\nimport MetaTags from 'react-meta-tags'\r\nimport Header from '../layouts/Header'\r\nimport Breadcrumb from '../layouts/Breadcrumb'\r\nimport Footer from '../layouts/Footerthree'\r\nimport Content from '../sections/agent-archive/Content'\r\n\r\nclass Agentarchive extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <MetaTags>\r\n          <title>Acres - Real Estate React Template | Agent Archive</title>\r\n          <meta name='description' content='#' />\r\n        </MetaTags>\r\n        <Breadcrumb breadcrumb={{ pagename: 'Список агентов' }} />\r\n        <Content />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Agentarchive\r\n"],"sourceRoot":""}